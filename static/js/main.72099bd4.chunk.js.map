{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selected","handleSelect","e","good","ctrlKey","includes","target","innerText","setState","filter","selectedGood","clearButton","this","className","join","type","onClick","map","key","style","cursor","event","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAwEaC,E,4MApEbC,MAAQ,CACNC,SAAU,I,EAGZC,aAAe,SAACC,EAAGC,GAAU,IACnBH,EAAa,EAAKD,MAAlBC,SAEJE,EAAEE,UAAYJ,EAASK,SAASH,EAAEI,OAAOC,WAC3C,EAAKC,SAAS,CACZR,SAAS,GAAD,mBAAMA,GAAN,CAAgBG,MAEjBD,EAAEE,SAAWJ,EAASK,SAASH,EAAEI,OAAOC,WACjD,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,SAAU,YAAID,EAAMC,UACjBS,QAAO,SAAAC,GAAY,OAAKA,IAAiBP,SAG9C,EAAKK,SAAS,CACZR,SAAU,CAACG,M,EAKjBQ,YAAc,WACZ,EAAKH,SAAS,CACZR,SAAU,M,uDAIJ,IAAD,OACCA,EAAaY,KAAKb,MAAlBC,SAER,OACE,yBAAKa,UAAU,OACb,6CAEG,IACAb,EAASc,KAAK,MACf,4BAAQC,KAAK,SAASF,UAAU,QAAQG,QAASJ,KAAKD,aACnD,IADH,MAKF,yBAAKE,UAAU,eACb,4BACGhB,EAAgBoB,KAAI,SAAAd,GAAI,OACvB,4BACE,4BACEY,KAAK,SACLG,IAAKf,EACLgB,MAAO,CAAEC,OAAQ,WACjBP,UAAWb,EAASK,SAASF,GAAQ,SAAW,GAChDa,QAAS,SAAAK,GAAK,OAAI,EAAKpB,aAAaoB,EAAOlB,KAE1CA,c,GAvDDmB,IAAMC,WCXxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.72099bd4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selected: [],\n  };\n\n  handleSelect = (e, good) => {\n    const { selected } = this.state;\n\n    if (e.ctrlKey && !selected.includes(e.target.innerText)) {\n      this.setState({\n        selected: [...selected, good],\n      });\n    } else if (e.ctrlKey && selected.includes(e.target.innerText)) {\n      this.setState(state => ({\n        selected: [...state.selected]\n          .filter(selectedGood => (selectedGood !== good)),\n      }));\n    } else {\n      this.setState({\n        selected: [good],\n      });\n    }\n  }\n\n  clearButton = () => {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good:\n          {' '}\n          {selected.join(', ')}\n          <button type=\"button\" className=\"clear\" onClick={this.clearButton}>\n            {' '}\n            X\n          </button>\n        </h1>\n        <div className=\"select-list\">\n          <ul>\n            {goodsFromServer.map(good => (\n              <li>\n                <button\n                  type=\"button\"\n                  key={good}\n                  style={{ cursor: 'pointer' }}\n                  className={selected.includes(good) ? 'active' : ''}\n                  onClick={event => this.handleSelect(event, good)}\n                >\n                  {good}\n                </button>\n              </li>\n\n            ))}\n          </ul>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}